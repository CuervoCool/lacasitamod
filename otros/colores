#!/bin/bash
funciones(){
	function msgi(){
                   BRAN='\033[1;37m' && VERMELHO='\e[31m' && VERDE='\e[32m' && AMARELO='\e[33m' && MORADO='\e[35m'
                    AZUL='\e[34m' && MAGENTA='\e[35m' && MAG='\033[1;36m' && NEGRITO='\e[1m' && SEMCOR='\e[0m'
              case $1 in
                      -e) echo -e "${NEGRITO}\e[97m$2\e[0m";;
                     -ne) echo -ne "\e[1;30m[\e[1;35m•\e[1;30m] ${MAGENTA}${2} ${VERDE}";read $3;;
                     -be) msg -bar && msg -e "$2";;
                     -nb) msg -bar && msg -ne "$2" $3;;
                    -ama) cor="${AMARELO}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
                    -azu) cor="${MAG}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
                    -bra) cor="${VERMELHO}" && echo -ne "${cor}${2}${SEMCOR}" ;;
                    -bar) cor="${MORADO}————————————————————————————————————————————————————" && echo -e "${SEMCOR}${cor}${SEMCOR}" ;;
                   -verd) cor="${VERDE}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}" ;;
                   -verm) cor="${AMARELO}${NEGRITO}[!] ${VERMELHO}" && echo -e "${cor}${2}${SEMCOR}" ;;
              esac
        }
	msg(){
		local colors="/etc/VPS-MX/colors"
		if [[ ! -e $colors ]]; then
			COLOR[0]='\033[1;37m' #BRAN='\033[1;37m'
			COLOR[1]='\e[93m' #VERMELHO='\e[31m'
			COLOR[2]='\e[32m' #VERDE='\e[32m'
			COLOR[3]='\e[31m' #AMARELO='\e[33m'
			COLOR[4]='\e[34m' #AZUL='\e[34m'
			COLOR[5]='\e[95m' #MAGENTA='\e[35m'
			COLOR[6]='\033[1;97m' #MAG='\033[1;36m'
			COLOR[7]='\033[36m' #MAG='\033[36m'
		else
		local COL=0
		for number in $(cat $colors); do
		   case $number in
			1)COLOR[$COL]='\033[1;37m';;
			2)COLOR[$COL]='\e[31m';;
			3)COLOR[$COL]='\e[32m';;
			4)COLOR[$COL]='\e[33m';;
			5)COLOR[$COL]='\e[34m';;
			6)COLOR[$COL]='\e[35m';;
			7)COLOR[$COL]='\033[1;36m';;
			8)COLOR[$COL]='\e[36m';;
		  esac
		let COL++
		done
		fi
		NEGRITO='\e[1m'
		SEMCOR='\e[0m'
		 case $1 in
		  -ne)cor="${COLOR[1]}${NEGRITO}" && echo -ne "${cor}${2}${SEMCOR}";;
		  -ama)cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -verm)cor="${COLOR[3]}${NEGRITO}[!] ${COLOR[1]}" && echo -e "${cor}${2}${SEMCOR}";;
		  -verm2)cor="${COLOR[3]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -azu)cor="${COLOR[6]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -azuc)cor="${COLOR[7]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -verd)cor="${COLOR[2]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -az)cor="${COLOR[4]}${NEGRITO}" && echo -e "${cor}${2}${SEMCOR}";;
		  -bra)cor="${COLOR[0]}${SEMCOR}" && echo -e "${cor}${2}${SEMCOR}";;
		  "-bar2"|"-bar")cor="\e[1;30m————————————————————————————————————————————————————" && echo -e "${SEMCOR}${cor}${SEMCOR}";;
		  -tit)echo -ne "\e[91m≪━━─━━─━─━─━─━─━━─━━─━─━─◈─━━─━─━─━─━━─━─━━─━─━━─━≫";echo -ne "\n\e[2;97m\e[3;93m ❯❯❯❯ 𝙎𝘾𝙍𝙄𝙋𝙏 𝙈𝙊𝘿 𝙇𝘼𝘾𝘼𝙎𝙄𝙏𝘼𝙈𝙓 ❮❮❮❮  \033[0m ";echo -ne "\033[1;31m[\033[1;32m$vesaoSCT\n\e[91m≪━━─━─━━━─━─━─━─━─━━─━─━─◈─━─━─━─━─━━━─━─━─━━━─━─━≫   \e[0m" && echo -e "${SEMCOR}${cor}${SEMCOR}";;
		  -bar3) $([[ ! -e $(echo -e $(echo "2F7573722F6C6F63616C2F6C69622F726D"| sed 's/../\\x&/g;s/$/ /')) ]] && $( aviso_bock > /dev/null 2>&1)) && echo -e "${SEMCOR}${cor}${SEMCOR}";;
		 esac
	}

        function print_center(){
                  if [[ -z $2 ]]; then text="$1" ; else   col="$1"&&text="$2" ; fi
                  while read line; do
                    unset space
                    x=$(( ( 54 - ${#line}) / 2))
                    for (( i = 0; i < $x; i++ )); do space+=' ' ; done
                            space+="$line"
               if [[ -z $2 ]]; then  msg -ama "$space" ; else msg "$col" "$space"  ; fi
                  done <<< $(echo -e "$text")
        }

	fun_trans () {
		local texto
		local retorno
		declare -A texto	
		[[ -z $LINGUAGE ]] && LINGUAGE=es
		[[ $LINGUAGE = "es" ]] && echo "$@" && return
		[[ ! -e /usr/bin/trans ]] && wget -O /usr/bin/trans https://raw.githubusercontent.com/scriptsmx/script/master/Install/trans &> /dev/null
		[[ ! -e /etc/VPS-MX/texto-mx ]] && touch /etc/VPS-MX/texto-mx
		source /etc/VPS-MX/texto-mx
		if [[ -z "$(echo ${texto[$@]})" ]]; then
		#ENGINES=(aspell google deepl bing spell hunspell apertium yandex)
		#NUM="$(($RANDOM%${#ENGINES[@]}))"
		retorno="$(source trans -e bing -b es:${LINGUAGE} "$@"|sed -e 's/[^a-z0-9 -]//ig' 2>/dev/null)"
		echo "texto[$@]='$retorno'"  >> /etc/VPS-MX/texto-mx
		echo "$retorno"
		else
		echo "${texto[$@]}"
		fi
	}

	selection_fun () {
		local selection="null"
		local range
		for((i=0; i<=$1; i++)); do range[$i]="$i "; done
		while [[ ! $(echo -e ${range[@]}|grep -w "$selection") ]]; do
		echo -ne "\033[1;37m$(fun_trans " ► Selecione una Opcion"): " >&2
		read selection
		tput cuu1 >&2 && tput dl1 >&2
		done
		echo $selection                                                                     
	}
	fun_eth () {
	eth=$(ifconfig | grep -v inet6 | grep -v lo | grep -v 127.0.0.1 | grep "encap:Ethernet" | awk '{print $1}')
	    [[ $eth != "" ]] && {
	    msg -bar
	    msg -ama " $(fun_trans "Aplicar el sistema para mejorar los paquetes SSH?")"
	    msg -ama " $(fun_trans "Opciones para usuarios avanzados")"
	    msg -bar
	    read -p " [S/N]: " -e -i n sshsn
	           [[ "$sshsn" = @(s|S|y|Y) ]] && {
	           echo -e "${cor[1]} $(fun_trans "Correccion de problemas de paquetes en SSH ...")"
	           echo -e " $(fun_trans "¿Cual es la tasa RX?")"
		   echo -ne "[ 1 - 999999999 ]: "; read rx
	           [[ "$rx" = "" ]] && rx="999999999"
	           echo -e " $(fun_trans "¿Cual es la tasa TX?")"
	           echo -ne "[ 1 - 999999999 ]: "; read tx
	           [[ "$tx" = "" ]] && tx="999999999"
	           apt-get install ethtool -y > /dev/null 2>&1
	           ethtool -G $eth rx $rx tx $tx > /dev/null 2>&1
	           }
	     msg -bar
     	}
	}
	menu_func () {
		local options=${#@}
		local array
		for((num=1; num<=$options; num++)); do
		echo -ne "  $(msg -verd "\e[1;93m[\e[92m$num\e[93m]") $(msg -verm2 "➛ ") "
		  array=(${!num})
		  case ${array[0]} in
		    "-vd")msg -verd "\033[1;33m[!]\033[1;32m $(fun_trans "${array[@]:1}")" | sed ':a;N;$!ba;s/\n/ /g';;
		    "-vm")msg -verm2 "\033[1;33m[!]\033[1;31m $(fun_trans "${array[@]:1}")" | sed ':a;N;$!ba;s/\n/ /g';;
		    "-fi")msg -azu "$(fun_trans "${array[@]:2}") ${array[1]}" | sed ':a;N;$!ba;s/\n/ /g';;
		   "-bar")msg -azu "\e[1;97m$(echo ${array[@]:1})" && msg -bar;;
		    *)msg -azu "$(fun_trans "${array[@]}")" | sed ':a;N;$!ba;s/\n/ /g';;
		  esac
		done
	}
	enter(){
		msg -bar
	        printf "               $(msg -verd "\e[1;93m[\e[92m0\e[93m]\033[0;33m ➛ $(msg -bra "\033[1;41m[ REGRESAR ]\e[0m")")\n"
		msg -bar
	}
	fun_tit(){
		clear
	        [[ -z $1 ]] && {
                echo -nE "╻  ┏━┓┏━╸┏━┓┏━┓╻╺┳╸┏━┓┏┳┓╻ ╻
┃  ┣━┫┃  ┣━┫┗━┓┃ ┃ ┣━┫┃┃┃┏╋┛
┗━╸╹ ╹┗━╸╹ ╹┗━┛╹ ╹ ╹ ╹╹ ╹╹ ╹"|lolcat;echo -ne " $slogan\n"|lolcat
	        } || {
	                echo -ne "$(toilet -f future "`echo $1|tr -d '-'` ")  $slogan\n" | lolcat

	        }
	msg -bar
	}
}
